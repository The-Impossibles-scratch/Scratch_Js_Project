javascript:(async()=>{const get_cloud_logs=async(project_id,limit,offset)=>{const url=`https://clouddata.scratch.mit.edu/logs?projectid=${project_id}&limit=${limit}&offset=${offset}`;try{const res=await fetch(url);const logs=await res.json();if(logs.length==0){alert("There seems to be no Cloud Data activity on this projectâ€¦");return;}const result=[];for(const cloud of logs){result.push({User:cloud.user,"Data Name":cloud.name,Action:cloud.verb,"Data Value":cloud.value,Time:new Date(cloud.timestamp).toLocaleString()});}const blob=new Blob([JSON.stringify(result,null,2)],{type:"application/json"});const link=document.createElement("a");link.href=URL.createObjectURL(blob);link.download=`cloud_logs_${project_id}.json`;link.click();}catch(e){alert("Fetch Error : "+e);return;}};let project_id=prompt("Input Project ID (If nothing is entered, it will automatically be the current Project Id.)");if(!project_id){const url=window.location.href;const match=url.match(/projects\/(\d+)/);project_id=match?match[1]:"";}let limit=prompt("Input Limit (If nothing is entered, it will automatically be 0.)");if(!limit){limit=100;}limit=Number(limit);let offset=prompt("Input Offset (If nothing is enterd, it will automatically be 0).");if(!offset){offset=0;}offset=Number(offset);get_cloud_logs(project_id,limit,offset);})();
