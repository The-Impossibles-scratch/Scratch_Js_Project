javascript:(async function(){function get_csrf_token(){const cookies_str=document.cookie;const cookies=cookies_str.split("; ").map(c=>c.split("="));for(const [key,val]of cookies){if(key==="scratchcsrftoken"){return val;}}return null;}const csrf_token=get_csrf_token();if(!csrf_token){alert("CSRF token not found");return;}let username;try{const get_username=await fetch("https://scratch.mit.edu/session/",{method:"GET",headers:{"X-CSRFToken":csrf_token,"X-Requested-With":"XMLHttpRequest"},credentials:"include"});const username_json=await get_username.json();username=username_json.user?.username;if(!username){alert("You must be logged in.");return;}}catch(error){alert("You must be logged in.");return;}async function comment(user,txt,parent_id,commentee_id){const fetch_response=await fetch(`https://scratch.mit.edu/site-api/comments/user/${user}/add/`,{method:"POST",headers:{"X-CSRFToken":csrf_token,"X-Requested-With":"XMLHttpRequest","Content-Type":"application/json","User-Agent":navigator.userAgent,"Referer":"https://scratch.mit.edu/"},credentials:"include",body:JSON.stringify({content:txt,parent_id:parent_id,commentee_id:commentee_id})});if(fetch_response.status===200){alert("Status: Success");}else{alert("Status: Failed");}}async function get_commentee_id(username){try{const user_data_response=await fetch(`https://api.scratch.mit.edu/users/${username}/`);const user_data_json=await user_data_response.json();return user_data_json.id;}catch(error){alert("Fetch Error: "+error);return null;}}let username_input=prompt("Input User Name (If nothing is entered, it will automatically be the current username.)");if(!username_input){const url=window.location.href;username_input=url.match(/users\/([^\/]+)\//)?.[1];}let txt=prompt(`Input Comment Content (If nothing is entered, it will automatically be "Hello @${username_input}!")`);if(!txt){txt=`Hello @${username_input}!`;}const replay=prompt("If you want to reply to a comment, input 'Y' (If nothing is entered, your comment will not be a reply.)");if(!replay){await comment(username_input,txt,"","");}else if(replay==="Y"){const commentee_id=await get_commentee_id(username_input);const parent_id_str=prompt("Input Parent ID");if(!parent_id_str){alert("You must input a Parent ID.");throw new Error("You must input a Parent ID.");}const parent_id=Number(parent_id_str);await comment(username_input,txt,parent_id,commentee_id);}else{alert("Please input 'Y' or leave it blank.");throw new Error("Please input 'Y' or leave it blank.");}})();
